@import org.openapitools.codegen.model.OperationsMap
@import org.openapitools.codegen.CodegenOperation
@import gg.jte.support.ForSupport
@import vpdb.codegen.jaxrs.kt.tpl.*

@param ops: OperationsMap

package ${ops.packageName}

import jakarta.ws.rs.*
import jakarta.ws.rs.core.MediaType

@for(imp in ops.nonModelImports.sorted())
  import ${imp}
@endfor


!{val modelImports = ops.modelImports.sorted()}
@if(modelImports.size > 4)
  import ${ops.modelPackage}.*
  @if(ops.needsSupportPackage)
    import ${ops.supportPackage}
  @endif
@else
  @for(imp in modelImports)
    import ${imp}
  @endfor
@endif


@Path("/")
@if(ops.hasConsumes)
  @Consumes(${ops.consumes.joinToString(", ")})
@endif
@if(ops.hasProduces)
  @Produces(${ops.produces.joinToString(", ")})
@endif
interface ${ops.className} {
@for(op in ops.operations.operation)
  @template.api.method(it = op)
@endfor
}
