enum class {{classname}}(val value: {{{dataType}}}) {
  {{#allowableValues}}
    {{#enumVars}}
      {{#isArray}}
        {{#isList}}
  {{&name}}(listOf({{{value}}})),
        {{/isList}}
        {{^isList}}
  {{&name}}(arrayOf({{{value}}})),
        {{/isList}}
      {{/isArray}}
      {{^isArray}}
  {{&name}}({{{value}}}),
      {{/isArray}}
    {{/enumVars}}
  {{/allowableValues}}
  ;

  @JsonValue
  override fun toString() = value{{^isString}}.toString(){{/isString}}

  companion object {
    @JvmStatic
    @JsonCreator
    fun fromValue(value: {{{dataType}}}) =
      fromValueOrNull(value)
        ?: throw IllegalArgumentException("unrecognized {{classname}} value $value")

    @JvmStatic
    fun fromValueOrNull(value: {{{dataType}}}) =
      entries.firstOrNull { it.value == value }
  }
}