package {{modelPackage}}

{{#imports}}
import {{this}}
{{/imports}}
import jakarta.ws.rs.core.*

class {{operation.operationIdCamelCase}}UnionResponse private constructor(
  statusType: int,
  entity: Any?,
  contentType: String?,
) : UnionResponse(statusType, entity, contentType) {
  companion object {
{{#responses}}
  {{#response.dataType}}
    {{#response.hasHeaders}}
      {{#hasOneHeader}}
        {{#response.responseHeaders}}
    fun {{contentPrefixName}}{{response.code}}({{paramName}}: {{dataType}}{{^required}}? = null{{/required}}, body: {{{contentDataType}}}) =
        {{/response.responseHeaders}}
      {{/hasOneHeader}}
      {{^hasOneHeader}}
    fun {{contentPrefixName}}{{response.code}}(
      {{#response.responseHeaders}}
      {{paramName}}: {{dataType}}{{^required}}? = null{{/required}},
      {{/response.responseHeaders}}
      body: {{{contentDataType}}},
    ) =
      {{/hasOneHeader}}
    {{/response.hasHeaders}}
    {{^response.hasHeaders}}
    fun {{contentPrefixName}}{{response.code}}(body: {{{contentDataType}}}) =
    {{/response.hasHeaders}}
  {{/response.dataType}}
  {{^response.dataType}}
    {{#response.hasHeaders}}
      {{#hasOneHeader}}
    fun empty{{response.code}}({{paramName}}: {{dataType}}{{^required}}? = null{{/required}}) =
      {{/hasOneHeader}}
      {{^hasOneHeader}}
    fun empty{{response.code}}(
      {{#response.responseHeaders}}
        {{paramName}}: {{dataType}}{{^required}}? = null{{/required}},
      {{/response.responseHeaders}}
    ) =
      {{/hasOneHeader}}
    {{/response.hasHeaders}}
    {{^response.hasHeaders}}
    fun empty{{response.code}}() =
    {{/response.hasHeaders}}
  {{/response.dataType}}
      {{operation.operationIdCamelCase}}UnionResponse({{response.code}}, {{#response.dataType}}body, "{{{contentMimeType}}}"{{/response.dataType}}{{^response.dataType}}null, null{{/response.dataType}})
  {{#response.hasHeaders}}
      .headers.apply {
        {{#response.responseHeaders}}
        {{#required}}
        putSingle("{{baseName}}", {{paramName}}.toString())
        {{/required}}
        {{^required}}
        {{paramName}}?.let { putSingle("{{baseName}}", it.toString())
        {{/required}}
        {{/response.responseHeaders}}
      }
  {{/response.hasHeaders}}
  {{^-last}}

  {{/-last}}
{{/responses}}
  }
}